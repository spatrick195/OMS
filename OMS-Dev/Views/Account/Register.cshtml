@model OMS_Dev.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4 class="my-4">Step 1: Register your account.</h4>
    <div class="progress">
        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 20%"></div>
    </div>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-row">
        <div class="form-group col">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control col-12", placeholder = "Email Address" })
        </div>
        <div class="form-group col">
            @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control col-12", placeholder = "First Name" })
        </div>
        <div class="form-group col">
            @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control col-12", placeholder = "Last Name" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control col-12", placeholder = "Password" })
        </div>
        <div class="form-group col">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control col-12", placeholder = "Confirm Password" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group">
            <input type="submit" class="btn btn-lg btn-info col-12 w-100" value="Next" />
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}